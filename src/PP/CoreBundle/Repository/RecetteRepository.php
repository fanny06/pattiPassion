<?php

namespace PP\CoreBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * RecetteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecetteRepository extends \Doctrine\ORM\EntityRepository {

    public function getPageRecettes($page, $nbrePage) {
        $query = $this->createQueryBuilder('r')
                ->leftJoin('r.photo', 'p')
                ->addSelect('p')
                ->orderBy('r.id', 'desc')
                ->getQuery();

        $query->setFirstResult(($page - 1) * $nbrePage)->setMaxResults($nbrePage);

        return new Paginator($query, true);
    }

    public function getSearchRecette($page, $nbrePage, $search, $type, $tolerance = 3) {
        if ($type == 'all' || $type == null) {
            $query = $this->createQueryBuilder('r')
                    ->leftJoin('r.photo', 'p')
                    ->addSelect('p')
                    ->where('LEVENSHTEIN(r.title, :search) <= :tolerance')
                    ->orWhere('r.title LIKE :search2')
                    ->setParameter('search', $search)
                    ->setParameter('search2', '%' . $search . '%')
                    ->setParameter('tolerance', $tolerance)
                    ->getQuery();
        } else {
            $query = $this->createQueryBuilder('r')
                    ->leftJoin('r.photo', 'p')
                    ->addSelect('p')
                    ->leftJoin('r.type', 't')
                    ->addSelect('t')
                    ->where('LEVENSHTEIN(r.title, :search) <= :tolerance')
                    ->orWhere('r.title LIKE :search2')
                    ->andWhere('t.type = :type')
                    ->setParameter('type', $type)
                    ->setParameter('search', $search)
                    ->setParameter('search2', '%' . $search . '%')
                    ->setParameter('tolerance', $tolerance)
                    ->getQuery();
        }


        $query->setFirstResult(($page - 1) * $nbrePage)->setMaxResults($nbrePage);

        return new Paginator($query, true);
    }
    


}
